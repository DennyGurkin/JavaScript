'use strict'

/* Задание 1. Дан код, Почему код даёт именно такие результаты? */

var a = 1, b = 1, c, d
c = ++a
alert(c) /* результат = 2, алгоритм: a = a + 1, c = a => a = 2, c = 2 */
d = b++; alert(d); /* результат = 1, алгоритм: d = 1, b = b + 1 => d = 1, b = 2*/
c = (2+ ++a); alert(c);/* результат = 5, алгоритм: a = a + 1, c = 2 + a => a = 3, c = 5 */
d = (2+ b++); alert(d);/* результат = 4, алгоритм: d = 2 + b, b = 2 => d = 4, b = 3.
Сначала для формирования остатка d используется исходное значение b = 2, после выполнения операции b увеличивается на 1 */
alert(a); /* после выполнения примера c = (2+ ++a) значение a стало 3 */
alert(b); /* после выполнения примера d = (2+ b++) значение b стало 3 */


/* Задание 2. Чему будет равен x в примере ниже? */

var a = 2;
var x = 1 + (a *= 2); 

/* 
Ответ: x = 5
Здесь a *= 2 имеет следующий смысл: a = a*2 => a = 4.
x = 1 + 4 = 5
 */


/* Задание 3. Объявить две переменные a и b и задать им целочисленные произвольные начальные
значения.
Затем написать скрипт, который работает по следующему принципу:
- если a и b положительные, вывести их разность (ноль можно считать положительным числом);
- если а и b отрицательные, вывести их произведение;
- * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму;.*/

let a = Number(prompt("Введите целочисленное значение a:"))
let b = Number(prompt("Введите целочисленное значение b:"))

/* Проверка на целочисленность*/

function intnums(a,b) {
    if (Number.isInteger(a) && Number.isInteger(b) == true){
        alert("Введенные значения целочисленные");
        return 1 ;}
     {alert("Введенные значения не целочисленные, повторите ввод");
        return 0;
    }
}

let c = intnums(a,b)

function calc(a,b){
    if (c == 1 && a>=0 && b>=0){
        alert(`Сумма a и b: ${a - b}`)
    }
    else if (c == 1 && a<0 && b<0){
        alert(`Произведение a и b: ${a*b}`)
    }
    else if (c == 1 && a*b<= 0){
        alert(`Сумма a и b: ${a + b}`)
    }
}

alert(calc())

/* Задание 4.Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с двумя
параметрами. Т.е. например, функция для сложения должна принимать два числа, складывать их
и возвращать результат.
Обязательно использовать оператор return. */

function calc_plus(){
    alert("Вычислить сумму чисел a и b")
    let a = Number(prompt("Введите целочисленное значение a:"))
    let b = Number(prompt("Введите целочисленное значение b:"))
    let c = a + b
    return c
}

alert(`a + b = ${calc_plus()}`)

function calc_minus(){
    alert("Вычислить разность чисел a и b")
    let a = Number(prompt("Введите целочисленное значение a:"))
    let b = Number(prompt("Введите целочисленное значение b:"))
    let c = a - b
    return c
}

alert(`a - b = ${calc_minus()}`)

function calc_split(){
    alert("Вычислить частное чисел a и b")
    let a = Number(prompt("Введите целочисленное значение a:"))
    let b = Number(prompt("Введите целочисленное значение b:"))
    let c = a / b
    return c
}

alert(`a / b = ${calc_split()}`)

function calc_multiply(){
    alert("Вычислить произведение чисел a и b")
    let a = Number(prompt("Введите целочисленное значение a:"))
    let b = Number(prompt("Введите целочисленное значение b:"))
    let c = a * b
    return c
}

alert(`a * b = ${calc_multiply()}`)

/* Задание 5. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation),
где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от
переданного значения операции (использовать switch) выполнить одну из арифметических
операций
(использовать функции из задания 4) и вернуть полученное значение. */

function mathOperation(arg1, arg2, operation){
    let z = prompt("Введите тип операции (+, -, /, *):");
    switch(z){
        case "+":
            alert(`a + b = ${calc_plus()}`);
         break;
        case "-":
            alert(`a - b = ${calc_minus()}`);
            break;
        case "/":
            alert(`a / b = ${calc_split()}`);
            break;
        case "*":
            alert(`a * b = ${calc_multiply()}`);
            break;
        default: throw new Error("Некорректная операция" + z)
    }
}

alert(mathOperation())

